import { Injectable } from "@angular/core";
import { ActivatedRoute, Router } from '@angular/router';
import { Http, Response, RequestOptions, Headers } from "@angular/http";
import { Observable } from "rxjs";
import "rxjs/add/operator/map";
import { environment } from '../../../environments/environment';

@Injectable()
export class AuthenticationService {
    constructor(private http: Http, private _router: Router ) {
    }

    private _jwt() {
        // create authorization header with jwt token
        let currentUser = JSON.parse(localStorage.getItem('currentUser'));
        if (currentUser && currentUser.token) {
            let headers = new Headers({ 'Authorization': 'Bearer ' + currentUser.token });
            return new RequestOptions({ headers: headers });
        }
    }

    public verify():Observable<boolean> {
        return Observable.create((observer) => {
            setTimeout(() => {
                let currentUser = JSON.parse(localStorage.getItem('currentUser'));
                if(currentUser){
                    //TODO: Call API to verify user token. Token will be passed as HTTP Authorization Header.
                    //Check Authorization header in CakePHP
                    //return this.http.get('/api/verify', this._jwt()).map((response: Response) => response.json());
                    observer.next(true);
                    observer.complete(true);
                } else {
                    observer.next(false);
                    observer.complete(false);
                }
            }, 1000);
        });
    }

    public login(email: string, password: string) {
        let json = JSON.stringify({ email: email, password: password });
        let headers = new Headers();
        headers.append('Content-Type', 'application/json');
        let options = new RequestOptions({ headers: headers });
        return this.http.post(environment.apiBaseUrl + 'users/userLogin.json', json, { headers: headers }).map((response: Response) => {
             let data:any=response.json();
             console.log(data);
             if(data.hasOwnProperty("status")){
                 if(data["status"] == true){
                     localStorage.setItem('currentUser', JSON.stringify(data.data));
                     return true;
                 }
             }
             return false;
         });
    
    }

    logout() {
        // remove user from local storage to log user out
        localStorage.removeItem('currentUser');
    }
}
