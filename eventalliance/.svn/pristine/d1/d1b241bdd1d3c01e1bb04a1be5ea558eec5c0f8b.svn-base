import { Component, OnInit, ViewEncapsulation, AfterViewInit } from '@angular/core';
import { Helpers } from '../../../../helpers';
import { EventService } from '../events/events.service';
import { ActivatedRoute, Params } from '@angular/router';
import { Event } from '../events/event';
import { environment } from "../../../../../environments/environment";
import { ScriptLoaderService } from "../../../../_services/script-loader.service";

import { WSResponse } from "../../../../ws-response";
import { eventSurvey } from "./eventsurvey";
import { EventSurveyService } from "./eventsurvey.service";

@Component({
    selector: "app-event-public-survey",
    templateUrl: "./event-public-survey.component.html",
    encapsulation: ViewEncapsulation.None,
    providers: [EventService, EventSurveyService]
})
export class EventPublicSurveyComponent implements OnInit, AfterViewInit {

    public eventDetails: any;
    public eventId: number;
    public environment: any;
    public surveyFormData: eventSurvey;
    public surveyQueries: Array<any>;

     constructor(private _eventService: EventService, private _eventSurveyService: EventSurveyService, private _activatedRoute: ActivatedRoute, private _script: ScriptLoaderService) {
        this.eventDetails = new Event();
        this.environment = environment;
        this.surveyFormData = new eventSurvey();
    }

    ngOnInit() {
        
    }

    ngAfterViewInit(){
        this._script.loadScripts('app-event-public-survey',
            ['assets/app/js/dashboard.js']);

        // console.log("HELLO");
        // get survey Queries
        this._eventSurveyService.getSurveyQueries().subscribe((data: Array<any>) => {            
            this.surveyQueries = data;
        })

        this._activatedRoute.params.subscribe((params: Params) => {
            this.eventId =  params['id'];            
            Helpers.setLoading(true);
            this._eventService.getEventDetails(this.eventId).subscribe((data:any) => {
                Helpers.setLoading(false);
                this.eventDetails = data.event;
            }, (err) => {
                Helpers.setLoading(false);
                //TODO: Error handling
            });
        });
    }

    public saveSurvey(eventId: number): void {
        this.surveyFormData.event_id =  eventId;

        this._eventSurveyService.getIpAddress().subscribe(data => {
          this.surveyFormData.ip = data;
        });

        //console.log(this.surveyFormData);
        Helpers.setLoading(true);
        this._eventSurveyService.createSurvey(this.surveyFormData).subscribe((response: WSResponse) => { 
            Helpers.setLoading(false);
            if (response.status === true) {
                    //TODO: show success alert
                    //jQuery("#thankYou").modal("hide");
                    
                } else {
                    //TODO: Show failure alert
                }

        }, (err) => {

        })        
    }
}