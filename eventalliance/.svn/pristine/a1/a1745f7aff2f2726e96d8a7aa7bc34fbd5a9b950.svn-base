import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from "rxjs";
import { environment } from '../../../../../environments/environment';
import { WSResponse } from "../../../../ws-response";
import { YouTubeVideo } from "./youtubevideo";
import "rxjs/add/operator/map";

@Injectable()
export class ArtistDetails {

    constructor(private _httpClient: HttpClient) {

    }

    getDetails(artistId: number): Observable<any> {

        return this._httpClient.get<any>(environment.apiBaseUrl + "artists/" + artistId + "/getDetails.json").map((response): Array<any> => {
            return response.data;
        });
    }



    getYouTubeArtistByChannel(DBArtistID: number): Observable<Array<YouTubeVideo>> {
        return this._httpClient.get<any>(environment.apiBaseUrl + "youtube/live/" + DBArtistID + ".json").map((response): Array<YouTubeVideo> => {
            var _youtubeArtists: Array<YouTubeVideo> = [];
            var _youtubeArtist: YouTubeVideo;

            for (var i = 0; i < response.channelVideosSearchResult.items.length; i++) {
                _youtubeArtist = new YouTubeVideo();
                _youtubeArtist.videoId = response.channelVideosSearchResult.items[i].id.videoId;
                _youtubeArtist.thumbnailsUrl = response.channelVideosSearchResult.items[i].snippet.thumbnails.default.url;
                _youtubeArtist.channelTitle = response.channelVideosSearchResult.items[i].snippet.channelTitle;
                _youtubeArtist.videoTitle = response.channelVideosSearchResult.items[i].snippet.title;
                _youtubeArtist.videoDescription = response.channelVideosSearchResult.items[i].snippet.description;
                _youtubeArtists.push(_youtubeArtist);

            }

            return _youtubeArtists;

        });
    }


}