import { Injectable } from '@angular/core';
import { environment } from '../../../../../environments/environment';

import { Artist } from './artist';
import { ArtistGenre} from './artistgenre'


declare var jQuery: any;

@Injectable()
export class ArtistDataTable {

	constructor() {
		// code...
	}

	load(){
		var columns = [];
	
		columns.push({
			field: "ProfilePic",
			title: "",
			width: 60,
			template: function (row) {
				//console.log(row.profilePicture); 
			//	return "<img style='border-radius: 50%' height='50px' width='50px' src="+ row.profilePicture +"/>";
				return "<img style='border-radius: 50%' height='50px' width='50px' src='http://via.placeholder.com/100x100'/>";																																																																																																																																																																																													
			}
		});																																						
		columns.push({
			field: "name",																																																																																																																																
			title: "Name",
			width: 200,
			template: function (row) {		
				return "\t\t\t\t\t\t<a href='/artist-details/"+row.id + "'>\t\t\t\t\t\t<b>"+row.name +"</b>\t\t\t\t\t\t</a>\t\t\t\t\t\t";
			}
		}); 
		columns.push({
			field: "Genres",
			title: "Genres",
			width: 150,
			template: function (row) {
				if(row.genres.length>0){
					return row.genres;
				}else{
					return "N/A";
				} 
			
        	}
		}); 
		columns.push({
			field: "totalview",
			title: "Total Views",
			width: 100,
			template: function (row) {
            	return row.totalview;
        	}
		});
		columns.push({
			field: "Subscriber",
			title: "Subscriber",
			width: 100,
			template: function (row) {
            	return row.subscribers;
        	}
		});
		columns.push({
			field: "Budget",
			title: "Budget",
			width: 100,
			template: function (row) {
            	return row.budget;
        	}
		});
		columns.push({
			field: "Actions",
			width: 110,
			title: "Actions",
			sortable: !1,
			overflow: "visible",
			template: function(t, e, a) {
				return '\t\t\t\t\t\t<div class="dropdown ' + (a.getPageSize() - e <= 4 ? "dropup" : "") + '">\t\t\t\t\t\t\t<a href="#" class="btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill" data-toggle="dropdown">                                <i class="la la-ellipsis-h"></i>                            </a>\t\t\t\t\t\t  \t<div class="dropdown-menu dropdown-menu-right">\t\t\t\t\t\t    \t<a class="dropdown-item" href="#"><i class="la la-edit"></i> Edit Details</a>\t\t\t\t\t\t    \t<a class="dropdown-item" href="#"><i class="la la-leaf"></i> Update Status</a>\t\t\t\t\t\t    \t<a class="dropdown-item" href="#"><i class="la la-print"></i> Generate Report</a>\t\t\t\t\t\t  \t</div>\t\t\t\t\t\t</div>\t\t\t\t\t\t<a href="#" class="m-portlet__nav-link btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill modal-activator" data-id="' + t.id + '" title="Edit details">\t\t\t\t\t\t\t<i class="la la-edit"></i>\t\t\t\t\t\t</a>\t\t\t\t\t\t<a href="#" class="m-portlet__nav-link btn m-btn m-btn--hover-danger m-btn--icon m-btn--icon-only m-btn--pill" title="Delete">\t\t\t\t\t\t\t<i class="la la-trash"></i>\t\t\t\t\t\t</a>\t\t\t\t\t'
			}
		});

		var t = jQuery("#artist_datatable").mDatatable({
			data: {
				type: "remote",
				source: {
					read: {
						method: "GET",
						url: environment.apiBaseUrl + "artists/list.json",
						map: function(t:any) {
							var artists:Array<Artist> = [];											
							var _artist:Artist;			
							var _artistGenre =  ArtistGenre;
										
							for(var i=0; i<t.data.length; i++){
								_artist = new Artist();
								_artist.id = t.data[i].id;
								_artist.profilePicture = t.data[i].profile_picture;
								_artist.name = t.data[i].name;
															
								_artist.budget = t.data[i].budget.amount;
								//console.log(t.data[i]);
								// artist genres
								for(var g=0; g<t.data[i].artist_genres.length; g++){								
									_artist.genres.push(t.data[i].artist_genres[g].genre.name);							
								}

								// artist channel
								var _totalView = 0;
								var _totalSubscribe = 0;
								for(var c=0; c<t.data[i].artist_channels.length; c++){	
									_totalView += t.data[i].artist_channels[c].channel.channel_view_count;							
									_totalSubscribe += t.data[i].artist_channels[c].channel.channel_subscriber_count;							
																
								}
								_artist.totalview = _totalView;
								_artist.subscribers = _totalSubscribe;
								
								
								artists.push(_artist);
							}
							return artists;
						}
					}
				},
				pageSize: 10,
				serverPaging: !0,
				serverFiltering: !0,
				serverSorting: !0
			},
			layout: {
				scroll: !1,
				footer: !1
			},
			sortable: !1,
			pagination: !0,
			toolbar: {
				items: {
					pagination: {
						pageSizeSelect: [10, 20, 30, 50, 100]
					}
				}
			},
			search: {
				input: $("#generalSearch")
			},
			columns: columns
		});
		t.getDataSourceQuery();
	}
}