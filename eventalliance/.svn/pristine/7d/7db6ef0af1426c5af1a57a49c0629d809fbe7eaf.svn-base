import { Injectable } from "@angular/core";
import { ActivatedRoute, Router } from '@angular/router';
import { Http, Response, RequestOptions, Headers } from "@angular/http";
import "rxjs/add/operator/map";
import { environment } from '../../../environments/environment';

@Injectable()
export class AuthenticationService {
    private getTeamMemberData: Array<any>;


    constructor(private http: Http, private _router: Router, ) {
    }

    login(email: string, password: string) {
        // fetch the data from server & do the login here .
        //  /api/authenticate
        //http://internalmail.com/mci/login.php
        //this.Data.push({email: email, password: password});

        let json = JSON.stringify({ email: email, password: password });
        let headers = new Headers();
        headers.append('Content-Type', 'application/json');
        let options = new RequestOptions({ headers: headers });


        /* return this.http.post(environment.apiBaseUrl + 'users/userLogin.json', json, { headers: headers })
             .map((response: Response) => {
                 this.getTeamMemberData = response.json().data.team_members;
                 //console.log('Login Response');
                 //console.log(response.json().data);
                 let token  = response.json().data.token;
                 let email  = response.json().data.email;
                 //let teamId = response.json().data.email;
                 //alert(this.getTeamMemberData.length);
 
                
                 if (token) {
 
                     //  this.token = token;
                     //localStorage.setItem('currentUser', JSON.stringify(user));
                     localStorage.setItem('currentUser', JSON.stringify({ email: email, token: token }));
                    this._router.navigateByUrl('/artists');
 
                    // return true;
                 } else {
                     return false;
                 }
             });*/



        //   console.log("User Login details");        

        return this.http.post('/api/authenticate', JSON.stringify({ email: email, password: password }))
            .map((response: Response) => {
                // login successful if there's a jwt token in the response
                let user = response.json();
                //console.log(user);
                // console.log("User Login details");
                // console.log(user);
                if (user && user.token) {
                    // store user details and jwt token in local storage to keep user logged in between page refreshes
                    localStorage.setItem('currentUser', JSON.stringify(user));
                }
            });

    }

    logout() {
        // remove user from local storage to log user out
        localStorage.removeItem('currentUser');
    }
}
