import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from "rxjs";
import { environment } from '../../../../../environments/environment';
import { Users } from "./users";

import { WSResponse } from "../../../../ws-response";
import "rxjs/add/operator/map";

@Injectable()
export class UserService {
    private _userList: Array<Users>;

    constructor(private _httpClient: HttpClient) {
        this._userList = [];

    }


    public setUsersList(data: Array<any>): void {
        this._userList = [];
        var _user: Users;
        //alert(data.length);
        for (var i = 0; i < data.length; i++) {
            _user = new Users();
            for (var key in data[i]) {
                if (_user.hasOwnProperty(key)) {
                    _user[key] = data[i][key];
                }
            }
            this._userList.push(_user);
        }
    }

    public getUsersList(): Array<Users> {
        return this._userList;
    }

    public getUsersById(userId: number): Users {
        for (var i = 0; i < this._userList.length; i++) {
            if (this._userList[i].id == userId) {
                return Object.assign(new Users(), this._userList[i]);
            }
        }
    }


    


    updateUser(Data: Users): Observable<WSResponse> {
        return this._httpClient.put<WSResponse>(environment.apiBaseUrl + "users/update.json", Data);
    }


    createUser(Data: Users): Observable<WSResponse> {
        return this._httpClient.post<WSResponse>(environment.apiBaseUrl + "users/create.json", Data);
    }

    removeUser(Id: number): Observable<WSResponse> {
        return this._httpClient.delete<WSResponse>(environment.apiBaseUrl + "users/delete/" + Id + ".json");
    }

     

}